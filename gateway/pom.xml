<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Parent project (Spring Boot) -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- Module details -->
    <groupId>com.softweb</groupId>
    <artifactId>gateway</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>gateway</name>
    <description>gateway</description>

    <!-- Module properties -->
    <properties>
        <java.version>17</java.version>
        <docker.image.prefix>softweb</docker.image.prefix>
        <spring-cloud.version>2022.0.1</spring-cloud.version>
    </properties>

    <!-- Module dependencies -->
    <dependencies>

        <!--
            Spring Actuator - set of tools for control module working
            Link: https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
         -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--
            Spring Config Client - starter lib to register module as Config Server client
            Link: https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-config
         -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <!--
            Spring Gateway - the tool provides out-of-the-box routing mechanisms often used in
                microservices applications as a way of hiding multiple services behind a single facade.
            Link: https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-gateway
         -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>

        <!--
            Eureka Client - starter lib to register module as eureka client
            Link: https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-client
         -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <!--
            Spring Test - set of tools for unit and integration app testing
            Link: https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
         -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--
            Spring Cloud Bootstrap - starter lib supports bootstrap config files
            Link: https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-bootstrap
         -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
    </dependencies>

    <!-- Set of settings for dependencies -->
    <dependencyManagement>
        <dependencies>

            <!--
                Spring Cloud Dependencies - dependencies for other cloud modules
                Link: https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies
            -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Project build settings -->
    <build>

        <!-- Required plugins -->
        <plugins>

            <!--
                Spring Boot Plugin - optimizes and simplifies building a spring application based on a Maven project
                Link: https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-maven-plugin
            -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--
                Dockerfile Maven - adds support for building Dockerfiles in Maven
                Link: https://mvnrepository.com/artifact/com.spotify/dockerfile-maven-plugin
            -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>
                <configuration>
                    <repository>${docker.image.prefix}/${project.artifactId}</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>netflix-candidates</id>
            <name>Netflix Candidates</name>
            <url>https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

</project>
